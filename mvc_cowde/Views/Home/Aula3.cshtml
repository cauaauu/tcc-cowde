
@{
    ViewData["Title"] = "Aula";
    <link rel="stylesheet" href="~/css/editor-style.css" />
    <link rel="stylesheet" href="~/css/nav.css" />
    <link rel="stylesheet" href="~/css/styleAula.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />

}



<body>
    <!--Background da navbar-->
    <div class="nav-background">
        <img class="img-background1" src="~/img/background.png" alt="" />
        <img class="img-background2" src="~/img/background.png" alt="" />
        <img class="img-background3" src="~/img/background.png" alt="" />
    </div>


    <!-- NavBar -->
    <nav class="nav-bar">
        <div class="elementos-nav">
            <a asp-controller="Home" asp-action="Modulos">
                <img class="logo_nav" src="~/img/logoCowde_ofc.png" alt="">
            </a>

            <div class="links-nav">
                <a class="text-nav" asp-area="" asp-controller="Home" asp-action="Modulos">Modulos</a>
            </div>
            <div class="drop">
                @{
                    string nome = ViewBag.Avatar;
                    string formato = "/img/avatares/" + nome;
                }
                <img class="perfil-img" src="@formato" alt="" />
                <div class="drop-down_perfil">
                    <a class="text-drop" asp-area="" asp-controller="Home" asp-action="Perfil" id="link1">Perfil</a>
                    <a class="text-drop" asp-area="" asp-controller="Usuario" asp-action="Sair">Sair</a>
                </div>
            </div>
        </div>
    </nav>


    <!-- Menu Hamburger Responsivo -->
    <div class="topnav">
        <a asp-controller="Home" asp-action="Modulos">
            <img class="logoHambger" src="~/img/logoCowde_ofc.png" alt="" />
        </a>
        <div id="myLinks">
            <a class="a-link" asp-area="" asp-controller="Home" asp-action="Modulos">Módulos</a>
        </div>
        <a href="javascript:void(0);" class="icon" onclick="Burger()">
            <i class="fa fa-bars"></i>
        </a>
    </div>

    <!-- Código pra ocultar os links e também o menu -->
    <script>
        function Burger() {
            var x = document.getElementById("myLinks");
            if (x.style.display === "block") {
                x.style.display = "none";
            } else {
                x.style.display = "block";
            }
        }
        var nav = document.querySelector(".topnav").style.display;
        if ((nav.style.display = "flex")) {
            Burger();
        }
    </script>

    <!-- Ajuda Pop-Up -->
    <img id="but-ajuda" onclick="ajuda()" src="~/img/botaoUquee.png" alt="">
    <div class="modal-ajuda" id="modal">
        <div class="modalX">
            <div class="elementosGeral">
                <p class="x" onclick="fecharPopUp()">X</p>
                <div class="elementos">
                    <p class="text-modal">• Esse é o editor, onde você vai digitar seu código!</p>
                    <img class="img" src="~/img/editorTxt.png" alt="">
                    <p class="text-modal">
                        • Esses são os botões. O amarelo vai fazer seu código funcionar, e o rosa vai limpar
                        tudo
                        o que estiver na tela. Cuidado!
                    </p>
                    <img class="botoes-img" src="~/img/botoes.png" alt="">
                </div>
                <div class="elementos">
                    <p class="text-modal">• Este é o campo que vai mostrar o que você deve digitar.</p>
                    <img class="img" src="~/img/dica.png" alt="">
                    <p class="text-modal">• E é aqui que vão aparecer seus resultados!</p>
                    <img class="img" src="~/img/saida.png" alt="">
                </div>
            </div>
        </div>
    </div>


    <div class="modal" id="modal">
        <p class="x" onclick="fecharPopUp()">X</p>
        <p class="titulo-modal">Hey!</p>
        <p class="text-modal">Tente digitar ao invés de copiar e colar, garantimos que seu aprendizado será melhor!</p>
        <img class="vaquinha" src="~/img/vaquinha_jennifer.png" alt="">
    </div>


    <main id="opacidade">
        <div class="card-text">
            <p class="titulo">
                <span style="color: #3bff14">3. Arrays:</span> como funcionam?
            </p>

            <!-- parte 1 -->
            <div id="aula-pt1">
                <p class="texto">
                    Criando um Array 🪐
                </p>
                <p class="texto">
                    Você gosta de astronomia? Sabe quais são todos os planetas do nosso Sistema Solar?
                </p>
                <p class="texto">
                    Para criar um array, você só vai precisar usar chaves, essas daqui [].
                    É bem simples, não é? Vamos colocar nossos planetas dentro dessas chaves, assim:
                </p>

                <p class="texto-teste" id="texto-aula">
                    var idade = 0;<br>
                    var sistemaSolar = ["Mercúrio", "Vênus", "Terra", "Marte", <br>"Júpiter", "Saturno", "Urano", "Netuno"];
                    console.log(sistemaSolar);
                </p>
                <p class="texto">
                    É importante que você entenda que as listas dentro dos nossos arrays começam a partir de 0. Imagine dessa forma:<br>
                    <br>
                    -> [0] Mercúrio;<br>
                    -> [1] Vênus;<br>
                    -> [2] Terra;<br>
                    -> [3] Marte.
                </p>
                <p class="texto">
                    E assim por diante. Se você quiser acessar uma informação específica dentro da sua array, é só indicar a posição dela.
                </p>
                <p class="texto">
                    Qual é o planeta que está na 5 posição?
                </p>
                <p class="texto-teste" id="texto-aula">
                    var sistemaSolar = ["Mercúrio", "Vênus", "Terra", "Marte", <br>"Júpiter", "Saturno", "Urano", "Netuno"];<br>
                    console.log(sistemaSolar[5]);
                </p>
                <p class="texto">
                    É possível colocar até arrays dentro de arrays! Vamos complicar um pouco as coisas, hehe.
                </p>
                <p class="texto">
                    Por exemplo, Saturno possui 7 anéis, não é? Então acrescentamos essa informação na nossa lista.
                    Mas agora, é como se tivesse uma lista dentro de outra.<br>
                    <br>
                    -> [0] Saturno;<br>
                    -> [1] 7;<br>
                </p>
                <p class="texto">
                    Se acessarmos o índice [5], obteremos a array de Saturno e seus anéis.
                </p>
                <p class="texto-teste" id="texto-aula">
                    var sistemaSolar = ["Mercúrio", "Vênus", "Terra", "Marte", <br>"Júpiter", ["Saturno", 7], "Urano", "Netuno"];<br>
                    console.log(sistemaSolar[5]);
                </p>
                <p class="texto">
                    Mas se você quiser saber apenas quantos anéis ele têm, é só fazer isso:
                </p>
                <p class="texto-teste" id="texto-aula">
                    var sistemaSolar = ["Mercúrio", "Vênus", "Terra", "Marte", "Júpiter"<br>, ["Saturno", 7], "Urano", "Netuno"];<br>
                    console.log(sistemaSolar[5][1]);
                </p>
                <p class="texto">
                    Para descobrir o tamanho do array, você pode usar o .length, lembra dele?
                </p>
                <p class="texto-teste" id="texto-aula">
                    console.log(sistemaSolar.length);
                </p>
                <p class="texto">
                    Se precisar descobrir a posição de um elemento específico, use um .indexOf em sua variável.
                </p>
                <p class="texto-teste" id="texto-aula">
                    console.log(sistemaSolar<br>.indexOf("Netuno"))
                </p>
                <p class="texto">
                    E para adicionar novos elementos, você pode usar o .push, assim:
                </p>
                <p class="texto-teste" id="texto-aula">
                    var sistemaSolar = [<br>
                    "Mercúrio", "Vênus", "Terra", "Marte", "Júpiter", "Saturno",<br>
                    "Urano", "Netuno"];<br>
                    sistemaSolar.push("Sol");<br>
                    console.log(sistemaSolar);
                </p>
                <p class="texto">
                    Mas vamos combinar que o Sol deveria vir na frente de todos, né?
                    Para passar um elemento na frente de todos os outros, use o .unshift no lugar do push.
                </p>
                <p class="texto-teste" id="texto-aula">
                    var sistemaSolar = [<br>
                    "Mercúrio", "Vênus", "Terra", "Marte", "Júpiter", "Saturno",<br>
                    "Urano", "Netuno"];<br>
                    sistemaSolar.unshift("Sol");<br>
                    console.log(sistemaSolar);
                </p>
                <p class="texto">
                    Por fim, um buraco negro misteriosamente atingiu nosso sistema e começou a engolir os planetas… Eles desapareceram com um .pop!
                </p>
                <p class="texto-teste" id="texto-aula">
                    var sistemaSolar = [ <br>
                    "Mercúrio", "Vênus", "Terra", "Marte", "Júpiter", "Saturno", <br>
                    "Urano", "Netuno"]; <br>
                    <br>
                    console.log(sistemaSolar.pop() + " foi engolido!"); <br>
                    console.log("Sobraram: " + sistemaSolar); <br>
                    <br>
                    //Tente fazer com que todos os planetas sejam engolidos!
                </p>
                <p class="texto">
                    O código acima ficou enorme, né? Logo, logo vamos aprender a fazer laços de repetição para te ajudar ✪ ω ✪
                </p>
                <p class="texto">
                    🌞 🌞 🌞
                </p>

                <div class="butns">
                    <button class="btn-avancar" id="butAvan" onclick="avancar_conteudo1()">AVANÇAR</button>
                </div>
            </div>

            <!-- parte 2 -->
            <div id="aula-pt2">
                <p class="texto">
                    Brincando com strings e arrays ♠♣♥♦
                </p>
                <p class="texto">
                    Podemos transformar as informações dos arrays em strings, ou seja, textos. Para isso, vamos usar um .join() na nossa variável.
                </p>
                <p class="texto-teste" id="texto-aula">
                    var cartas = ["Espada", "Paus", "Copas", "Ouros"]; <br>
                    console.log(cartas.join());
                </p>
                <p class="texto">
                    Você pode até mesmo separar as palavras como quiser. Se já viu as cartas de um baralho, sabe que algumas são mais “poderosas” que outras. Por exemplo:
                </p>
                <p class="texto-teste" id="texto-aula">
                    var cartas = ["Paus", "Copas", "Espada", "Ouros"];<br>
                    console.log(cartas.join(">"));
                </p>
                <p class="texto">
                    Faça o teste com o seu nome completo. Tipo assim:
                </p>
                <p class="texto-teste" id="texto-aula">
                    var cartas = ["Paus", "Copas", "Espada", "Ouros"];<br>
                    console.log(cartas.join(">"));
                </p>
                <p class="texto">
                    Vamos falar um pouco sobre números agora. Existe uma funçãozinha em JavaScript chamada de Math.random().
                    É como um sorteio, ou seja, ela vai tomar decisões por você de forma aleatória. Digite o código abaixo:
                </p>
                <p class="texto-teste" id="texto-aula">
                    console.log(Math.random());
                </p>
                <p class="texto">
                    Note que o resultado é um decimal, sabe aqueles números quebradinhos e com vírgula?
                    Mas aqui nós queremos um número inteiro. Como uma pizza, não queremos um pedacinho só, queremos é devorá-la todinha.
                </p>
                <p class="texto">
                    Então vamos usar o Math.floor() antes do nosso Math.random(). Eu sei, é complicadinho, mas você consegue!
                </p>
                <p class="texto-teste" id="texto-aula">
                    //Vamos multiplicar por 10!<br>
                    console.log(<br>
                    Math.floor(Math.random() * 10)<br>
                    );
                </p>
                <p class="texto">
                    Podemos sortear palavras também. Vamos brincar um pouquinho.
                </p>
                <p class="texto-teste" id="texto-aula">
                    //Se você fosse um animal, qual seria?<br>
                    <br>
                    var animais = [<br>
                    "Baleia 🐋",<br>
                    "Raposa 🦊",<br>
                    "Pavão 🦚",<br>
                    "Girafa 🦒",<br>
                    "Elefante 🐘",<br>
                    "Baiacu 🐡"<br>
                    ];<br>
                    var quantidade = animais.length;<br>
                    var texto = "Você seria um/uma ";<br>
                    <br>
                    console.log(texto +<br>
                    animais[Math.floor(Math.random() * quantidade)]<br>
                    );
                </p>


                <div class="butns">
                    <button class="btn-voltar" onclick="voltar_conteudo1()">VOLTAR</button>
                    <button class="btn-avancar" id="butAvan" onclick="avancar_conteudo2()">AVANÇAR</button>
                </div>
            </div>

            <!-- parte 3 -->
            <div id="aula-pt3">
                <p class="texto">
                    Invertendo strings 😵
                </p>
                <p class="texto">
                    Já ouviu falar em palíndromos? Palíndromos são palavras que, se você inverter, continuam exatamente igual, como Arara. Ou Reviver.
                </p>
                <p class="texto">
                    Para inverter uma string, devemos utilizar o .split(), pois ele vai transformar cada letrinha da nossa palavra em um array.
                    Depois, vamos usar um .reverse(), assim saberemos qual palavra é um palíndromo ou não. Vamos testar abaixo:
                </p>
                <p class="texto-teste" id="texto-aula">
                    //🍌🍌<br>
                    <br>
                    console.log("Banana".split("")<br>.reverse().join(""));
                </p>
                <p class="texto">
                    Teste com outras palavras também!
                </p>
                <p class="texto-teste" id="texto-aula">
                    var palavra = prompt("Escreva uma palavra:");<br>
                    console.log(palavra.split('')<br>.reverse().join(''));
                </p>

                <div class="butns">
                    <button class="btn-voltar" onclick="voltar_conteudo2()">VOLTAR</button>
                    <a asp-controller="Home" asp-action="Questionario">
                        <button class="btn-avancar" id="butAvan" onclick="concluir_conteudo()">CONCLUIR</button>
                    </a>
                </div>
            </div>
        </div>

        <!-- Editor de código -->
        <div class="editor__wrapper">
            <p class="text">EDITOR</p>
            <div class="editor__body">
                <div id="editorCode" class="editor__code"></div>
            </div>
            <div class="btns">
                <button class="editor__btn editor__run">EXECUTAR</button>
                <button class="editor__btn editor__reset">LIMPAR</button>
            </div>
            <div class="editor__footer">
                <div class="editor__footer--left"></div>
                <div class="editor__footer--right">
                    <p class="text">SAÍDA</p>
                    <div class="editor__console">
                        <ul class="editor__console-logs"></ul>
                    </div>
                </div>
            </div>
        </div>
    </main>


    <!-- Bibliotecas necessárias do Ace -->
    <script src="~/js/ace-editor/src-min/ace.js"></script>
    <script src="~/js/ace-editor/src-min/mode-javascript.js"></script>
    <script src="~/js/ace-editor/src-min/ext-language_tools.js"></script>
    <script src="~/js/aula_funcoes.js"></script>


    <!-- Customização -->
    <script src="~/js/editor.js"></script>
    <script src="~/js/editor-console.js"></script>
    <script src="~/js/but-ajuda.js"></script>

</body>

